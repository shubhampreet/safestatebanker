#include <stdio.h> 
int main() 
{ 
    // P0, P1, P2, P3, P4 are the Process names here 
  
    int n, m, i, j, k; 
   printf("Please enter number of resources\n");
scanf("%d",&n);
printf("Please enter number of processes\n");
scanf("%d",&m); 
   int alloc[n][m];
   for(i=0; i<m; i++) { //Allocation Matrix
      for(j=0;j<n;j++) {
         printf("Enter value for Allocation Matrix[%d][%d]:", i, j);
         scanf("%d", &alloc[i][j]);
      }
   }
int max[n][m];
for(i=0; i<m; i++) { //Max Matrix;
      for(j=0;j<n;j++) {
         printf("Enter value for Max Matrix[%d][%d]:", i, j);
         scanf("%d", &max[i][j]);
      }
   }
  
  
   int avail[m];
for(i=0; i<m; i++){ // Available Resources 
printf("Please enter available resources");
scanf("%d",&avail[m]);
}
    int f[n], ans[n], ind = 0; 
    for (k = 0; k < n; k++) { 
        f[k] = 0; 
    } 
    int need[n][m]; 
    for (i = 0; i < n; i++) { 
        for (j = 0; j < m; j++)
            need[i][j] = max[i][j] - alloc[i][j]; 
    } 
    int y = 0; 
    for (k = 0; k < 5; k++) { 
        for (i = 0; i < n; i++) { 
            if (f[i] == 0) { 
  
                int flag = 0; 
                for (j = 0; j < m; j++) { 
                    if (need[i][j] > avail[j]) 
                        flag = 1; 
                    break; 
                } 
  
                if (flag == 0) { 
                    ans[ind++] = i; 
                    for (y = 0; y < m; y++) 
                        avail[y] += alloc[i][y]; 
                    f[i] = 1; 
                } 
            } 
        } 
    } 
  
    printf("Following is the SAFE Sequence\n"); 
    for (i = 0; i < n - 1; i++) 
        printf(" P%d ->", ans[i]); 
    printf(" P%d", ans[n - 1]); 
  
    return (0);   
} 
